Core.init = function()
	globals.Core.metaxploit = include_lib("/lib/metaxploit.so")
	if not globals.Core.metaxploit then
		exit(Pprint.color("Error: metaxploit.so missing.", "red", true))
	end if
end function

Core.recon = function()
	globals.Target.ports = {}
	globals.Target.router = get_router(globals.Target.ip)
	globals.Target.whois = whois(globals.Target.ip)
	ports = globals.Target.router.used_ports()
	for port in ports
		p = new Port
		p.number = port.port_number
		p.ip = port.get_lan_ip
		info = globals.Target.router.port_info(port).split(" ")
		p.service = info[0]
		p.version = info[1]
		if port.is_closed then
			p.state = globals.CLOSED
		else
			p.state = globals.OPEN
		end if
		globals.Target.ports[p.number] = p
	end for
end function

Core.exploit = function(port)
	print("Scanning port: " + str(port.number))
	net_session = globals.Core.metaxploit.net_use(globals.Target.ip, port.number)
	if not net_session then
		print("<color=#d9455f>Error: Couldn't connect.</color>")
	end if
	globals.Core.metalib = net_session.dump_lib
	mem_zones = globals.Core.metaxploit.scan(globals.Core.metalib)
	report = ""
	for mem_addr in mem_zones
		mem_scan = globals.Core.metaxploit.scan_address(globals.Core.metalib, mem_addr)
		print(mem_addr)
		print(mem_scan)
	end for
	print(report)
end function
